#!/bin/bash

# Find all libraries and executables generated in this directory

# -------------------------------------
# Special for this directory

source ./etc/bashrc

# -------------------------------------

executables=()
libraries=()

file_list=()
while IFS= read -d $'\0' -r file ; do
    file_list=("${file_list[@]}" "$file")
done < <(find -name "Make" -print0)


for file in "${file_list[@]}" ; do
    $(grep -q dynamicCode "$file/files")
    if [[ $? -ne 0 ]]; then
        # Determine if it is a library or an executable
        EXE_VAR=$(grep 'EXE = $(FOAM_USER_APPBIN)' "$file/files" | awk -F "/" '{print $2}' | awk -F "\$" '{print $1}')
        DEVELOPMENT_OPTION=$(grep 'EXE = $(FOAM_USER_APPBIN)' "$file/files" | awk -F "/" '{print $2}' | awk -F "\$" '{print $2}')
        if [[ $DEVELOPMENT_OPTION != "" ]]; then 
            EXE_VAR=${EXE_VAR}${IS_DEVELOPMENT_BRANCH}
        else
            EXE_VAR=${EXE_VAR}
        fi
        executables+=(${EXE_VAR})
        LIB_VAR=$(grep 'LIB = $(FOAM_USER_LIBBIN)' "$file/files" | awk -F "/" '{print $2}' | awk -F "\$" '{print $1}')
        DEVELOPMENT_OPTION=$(grep 'LIB = $(FOAM_USER_LIBBIN)' "$file/files" | awk -F "/" '{print $2}' | awk -F "\$" '{print $2}')
        if [[ $DEVELOPMENT_OPTION != "" ]]; then 
            LIB_VAR=${LIB_VAR}${IS_DEVELOPMENT_BRANCH}
        else
            LIB_VAR=${LIB_VAR}
        fi
        libraries+=(${LIB_VAR})
        
    fi
done


mkdir -p build/bin
for exe in "${executables[@]}"; do
    [ -e "${FOAM_USER_APPBIN}/$exe" ] && cp -u ${FOAM_USER_APPBIN}/$exe build/bin
done

mkdir -p build/lib
for lib in "${libraries[@]}"; do
    [ -e "${FOAM_USER_LIBBIN}/${lib}.so" ] && cp -u "${FOAM_USER_LIBBIN}/${lib}.so" build/lib
done

# -------------------------------------------------------------------------------
# Distribute executables and libraries


mkdir -p ${FOAM_USER_APPBIN}
for f in build/bin/*; do
    bin="${f##*/}"
    if [[ "$f" -nt "${FOAM_USER_APPBIN}/$bin"  ]]; then
        echo "Copy ${bin} to ${FOAM_USER_APPBIN}"
        cp -u $f ${FOAM_USER_APPBIN}
    fi
done

mkdir -p ${FOAM_USER_LIBBIN}
for f in build/lib/*; do
    lib="${f##*/}"
    if [[ "$f" -nt "${FOAM_USER_LIBBIN}/$lib"  ]]; then
        echo "Copy ${lib} to ${FOAM_USER_LIBBIN}"
        cp -u $f ${FOAM_USER_LIBBIN}
    fi
done

# -------------------------------------------------------------------------------
# Find all lnInclude and distribute

INCLUDE_DIR="build/includes"
mkdir -p ${INCLUDE_DIR}

lnInclude_list=()
while IFS= read -d $'\0' -r file ; do
    lnInclude_list=("${lnInclude_list[@]}" "$file")
done < <( find -path "./build" -prune -o -name "lnInclude" -print0)


for file in "${lnInclude_list[@]}" ; do
    lnInclude_Path=$(echo "$file" | sed -e 's/\.\///' | sed -e 's/lnInclude//')
    mkdir -p "${INCLUDE_DIR}/${lnInclude_Path}"
    echo "Copy ${lnInclude_Path}lnInclude to ${INCLUDE_DIR}/${lnInclude_Path}"
    cp -r "${lnInclude_Path}lnInclude" ${INCLUDE_DIR}/${lnInclude_Path}
done

echo ""
echo "Distribute lnInclude:"

lnInclude_toCopy=()
while IFS= read -d $'\0' -r file ; do
    lnInclude_toCopy=("${lnInclude_toCopy[@]}" "$file")
done < <( find ./build -name "lnInclude" -print0)

for file in "${lnInclude_toCopy[@]}"; do
    PATH_TO_COPY=$(echo "$file" | sed -e 's/\.\/build\/includes/\./' | sed -e 's/lnInclude//')
    echo "Copy ${file} to ${PATH_TO_COPY}"
    cp -r ${file} ${PATH_TO_COPY}
done


